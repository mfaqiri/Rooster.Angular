jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet build

  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover -p:CoverletOutput=./TestCoverage/ -l trx -r ./TestResult/



  analyze:
    needs:
      - build
      - test
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet tool install -g dotnet-sonarscanner
      - run: dotnet sonarscanner begin -k:'mfaqiri_Rooster.Angular' -o:'mfaqiri' -d:sonar.login=$SONAR_TOKEN -d:sonar.host.url='https://sonarcloud.io' -d:sonar.cs.vstest.reportPaths=./TestResult/*.trx -d:sonar.cs.opencover.reportsPaths=./TestCoverage/*.xml
      - run: dotnet build
      - run: dotnet sonarscanner end -d:sonar.login=$SONAR_TOKEN

name: ci-pipeline
on: push